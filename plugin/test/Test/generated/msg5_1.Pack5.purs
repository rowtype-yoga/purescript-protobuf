-- | Generated by __protobuf__ from file `msg5_1.proto`
module Pack5.Msg51
( Msg2(..), Msg2Row, Msg2R, parseMsg2, putMsg2, defaultMsg2, mkMsg2, mergeMsg2
)
where
import Protobuf.Internal.Prelude
import Protobuf.Internal.Prelude as Prelude

import Pack5.Msg5 as Pack5



-- | Message generated by __protobuf__ from `pack5.Msg2`
newtype Msg2 = Msg2 Msg2R
type Msg2Row =
  ( f1 :: Prelude.Maybe Pack5.Msg1
  , __unknown_fields :: Array Prelude.UnknownField
  )
type Msg2R = Record Msg2Row
derive instance genericMsg2 :: Prelude.Generic Msg2 _
derive instance newtypeMsg2 :: Prelude.Newtype Msg2 _
derive instance eqMsg2 :: Prelude.Eq Msg2
instance showMsg2 :: Prelude.Show Msg2 where show x = Prelude.genericShow x

putMsg2 :: forall m. Prelude.MonadEffect m => Prelude.MonadRec m => Msg2 -> Prelude.PutM m Prelude.Unit
putMsg2 (Msg2 r) = do
  Prelude.putOptional 1 r.f1 (\_ -> false) $ Prelude.putLenDel Pack5.putMsg1
  Prelude.foldRecM (\_ x -> Prelude.putFieldUnknown x) unit r.__unknown_fields

parseMsg2 :: forall m. Prelude.MonadEffect m => Prelude.MonadRec m => Prelude.ByteLength -> Prelude.ParserT Prelude.DataView m Msg2
parseMsg2 length = Prelude.label "Msg2 / " $
  Prelude.parseMessage Msg2 defaultMsg2 parseField length
 where
  parseField
    :: Prelude.FieldNumberInt
    -> Prelude.WireType
    -> Prelude.ParserT Prelude.DataView m (Prelude.Builder Msg2R Msg2R)
  parseField 1 Prelude.LenDel = Prelude.label "f1 / " $ do
    x <- Prelude.parseLenDel Pack5.parseMsg1
    pure $ Prelude.modify (Prelude.Proxy :: Prelude.Proxy "f1") $ Prelude.Just Prelude.<<< Prelude.maybe x (Pack5.mergeMsg1 x)
  parseField fieldNumber wireType = Prelude.parseFieldUnknown fieldNumber wireType

defaultMsg2 :: Msg2R
defaultMsg2 =
  { f1: Prelude.Nothing
  , __unknown_fields: []
  }

mkMsg2 :: forall r1 r3. Prelude.Union r1 Msg2Row r3 => Prelude.Nub r3 Msg2Row => Record r1 -> Msg2
mkMsg2 r = Msg2 $ Prelude.merge r defaultMsg2

mergeMsg2 :: Msg2 -> Msg2 -> Msg2
mergeMsg2 (Msg2 l) (Msg2 r) = Msg2
  { f1: Prelude.mergeWith Pack5.mergeMsg1 l.f1 r.f1
  , __unknown_fields: r.__unknown_fields <> l.__unknown_fields
  }


